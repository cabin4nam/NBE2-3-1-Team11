<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.order.mapper.OrderMapper">

    <update id="orderUpdate" parameterType="orderTO">
        update orders
        set email= #{email}, address=#{address}, zipcode=#{zipcode}
        where orderid=#{orderId}
    </update>
    <update id="orderitemUpdate" parameterType="orderItemTO">
        update orderitem
        set quantity=#{quantity}
        where orderid=#{orderId} and productid=#{productId}
    </update>
    <select id="productList" resultType="productTO">
        select * from product order by productId
    </select>


    <insert id="createOrder" parameterType="com.example.order.dto.OrderTO" useGeneratedKeys="true" keyProperty="orderId">
        INSERT INTO orders (email, address, zipcode, totalPrice, date)
        VALUES (#{email}, #{address}, #{zipcode}, #{totalPrice}, #{date});
    </insert>


    <insert id="createOrderItem" parameterType="com.example.order.dto.OrderItemTO">
        INSERT INTO orderitem (quantity, orderId, productId)
        VALUES (#{quantity}, #{orderId}, #{productId});
    </insert>

    <select id="productAll" resultType="ProductTO">
        select productId, name, price
        from product
    </select>

    <!-- 관리자 : 상품 등록 -->
    <insert id="insert" parameterType="ProductTO">
        insert into product
        values ( #{productId}, #{name}, #{price} )
    </insert>

    <select id="orderList" parameterType="String" resultType="orderItemTO">
        select  c.name as product, c.price , a.quantity, b.date, b.email, b.address, b.zipcode
        from orderitem A
                 inner join orders B on A.orderId = B.orderId
                 inner join product C on A.productId = C.productId
        where B.email = #{email}
    </select>
    <select id="todayOrder"  resultType="HashMap">
        SELECT
            B.name AS product,
            SUM(A.quantity) AS quantity
        FROM
            orderitem A
                inner JOIN product B ON A.productId = B.productId
                inner JOIN orders C ON A.orderId = C.orderId
        where
            DATE(C.date) = CURDATE()
          and
            C.email = #{email}
        GROUP BY
            B.name;
    </select>



</mapper>